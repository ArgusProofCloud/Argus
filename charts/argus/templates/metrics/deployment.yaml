---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "metrics"
  labels:
    {{- include "argus.labels" . | nindent 4 }}
    app: "metrics"
  annotations:
    {{- toYaml .Values.metrics.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.metrics.replicas.min }}
  selector:
    matchLabels:
      app: "metrics"
  template:
    metadata:
      annotations:
        {{- set .Values.metrics.podAnnotations "autocert.step.sm/name" "metrics-server" | toYaml | nindent 8 }}
      labels:
        app: "metrics"
    spec:
      tolerations:
        {{- toYaml .Values.metrics.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.metrics.affinity | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.metrics.nodeSelector | nindent 8 }}
      imagePullSecrets:
        {{- toYaml .Values.image.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .Values.metrics.securityContext | nindent 8 }}
      containers:
        - name: "metrics"
          image: "{{ .Values.image.registry }}/metrics:{{ .Values.metrics.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 1
            periodSeconds: 5
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: "15Mi"
              cpu: "100m"
            limits:
              memory: "50Mi"
              cpu: "300m"
          env:
            # Web port
            - name: PORT
              value: "3000"

            # Redis settings
            - name: REDIS_HOST
              value: "{{ .Values.redis.fullnameOverride | default (printf "%s-redis" .Chart.Name ) }}"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.redis.fullnameOverride | default (printf "%s-redis" .Chart.Name ) }}"
                  key: redis-password

            - name: LOGLEVEL
              value: "{{ .Values.metrics.loglevel }}"
