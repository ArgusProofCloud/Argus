---
- name: Deploy cert-master
  hosts: localhost
  tasks:
    - name: Create Service Account
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: cert-master
            namespace: "{{ app.namespace }}"

    - name: Create ClusterRole
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: cert-master-role
            namespace: "{{ app.namespace }}"
          rules:
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - list
                - update

    - name: Create ClusterRoleBinding
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: cert-master-role
          roleRef:
            kind: ClusterRole
            name: cert-master-role
            apiGroup: rbac.authorization.k8s.io
          subjects:
            - kind: ServiceAccount
              name: cert-master
              namespace: "{{ app.namespace }}"

    - name: "Deploy cert-master"
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "cert-master"
            labels:
              app: "cert-master"
          spec:
            replicas: "{{ certmaster.replicas.min }}"
            selector:
              matchLabels:
                app: "cert-master"
            template:
              metadata:
                annotations:
                  autocert.step.sm/name: "cert-master-server"
                labels:
                  app: "cert-master"
              spec:
                serviceAccount: cert-master
                serviceAccountName: cert-master
                imagePullSecrets: "{{ docker.imagePullSecrets }}"
                containers:
                  - name: "cert-master"
                    image: "{{ docker.registry }}/cert-master:{{ certmaster.tag }}"
                    imagePullPolicy: "{{ docker.pullPolicy }}"
                    ports:
                      - containerPort: 3000
                    resources:
                      requests:
                        memory: "15Mi"
                        cpu: "100m"
                      limits:
                        memory: "50Mi"
                        cpu: "300m"
                    env:
                      # Web port
                      - name: PORT
                        value: "3000"

                      # Redis settings
                      - name: REDIS_HOST
                        value: "redis"
                      - name: REDIS_PORT
                        value: "26379"
                      - name: REDIS_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: redis
                            key: redis-password

                      - name: LOGLEVEL
                        value: "{{ certmaster.loglevel }}"

                      # Certificates
                      - name: CERT_PATH
                        value: "/var/run/autocert.step.sm/site.crt"
                      - name: KEY_PATH
                        value: "/var/run/autocert.step.sm/site.key"
                      - name: CA_PATH
                        value: "/var/run/autocert.step.sm/root.crt"
                      - name: CA_URL
                        value: "autocert-step-certificates.{{ app.namespace }}.svc.cluster.local"
                      - name: NAMESPACE
                        value: "{{ app.namespace }}"

    - name: Deploy cert-master Service
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: cert-master-server
          spec:
            selector:
              app: cert-master
            ports:
              - name: http
                protocol: TCP
                port: 3000
                targetPort: 3000

    - name: Deploy AutoScaler
      when: "autoscaler.enabled == true"
      kubernetes.core.k8s:
        state: present
        namespace: "{{ app.namespace }}"
        definition:
          apiVersion: autoscaling/v1
          kind: HorizontalPodAutoscaler
          metadata:
            name: cert-master-autoscaler
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: cert-master
            minReplicas: "{{ certmaster.replicas.min }}"
            maxReplicas: "{{ certmaster.replicas.max }}"
            targetCPUUtilizationPercentage: 90
