- name: Apply Fluentd Configmaps
  hosts: configurator
  tasks:
    - name: Configmap
      kubernetes.core.k8s:
        state: present
        namespace: "{{ fluentd.namespace }}"
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: fluentd-config
            namespace: "{{ fluentd.namespace }}"
          data:
            fluent.conf: |
              # Kubernetes input
              @include k8s-fluent.conf
              @include fluent-output.conf

            k8s-fluent.conf: |
              <source>
                @type tail
                read_from_head true
                tag k8s.*
                path /var/log/containers/*.log
                pos_file /var/log/fluentd-k8s.log.pos
                exclude_path ["/var/log/containers/fluent*"]
                <parse>
                  @type kubernetes
                  @type "#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'json'}"
                  time_format %Y-%m-%dT%H:%M:%S.%NZ
                </parse>
              </source>

              <filter k8s.**>
                @type kubernetes_metadata
                @id filter_kube_metadata
                kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
                verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
                ca_file "#{ENV['KUBERNETES_CA_FILE']}"
                skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
                skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
                skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
                skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
              </filter>

            fluent-extra.conf: |
              # This file if automatically generated by Ansible.

              {%if fluentd.elastic.enabled == true %}{{ lookup('file', './fluentd-config/elastic.conf') }}{%endif%}

              {%if fluentd.custom.enabled == true %}{{ lookup('file', './fluentd-config/custom.conf') }}{%endif%}
